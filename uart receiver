module uart-rx
# (
parameter DBIT = 8 , // # d a t a b i t s
SB-TICK = 16 // # t i c k s f o r s t o p b i t s
5 1
(
i n p u t w i r e clk, r e s e t ,
i n p u t w i r e r x , s-tick,
output r e g r x - d o n e - t i c k ,
10 output w i r e [7:01 d o u t
1;
// s y m b o l i c s t a t e d e c l a r a t i o n
localparam [I : 01
I S i d l e = 2'b00,
s t a r t = 2 ' b01,
d a t a = 2'b10,
s t o p = 2'bll;
zo // s i g n a l d e c l a r a t i o n
r e g [I: 01 s t a t e - r e g , s t a t e - n e x t ;
r e g [3:0] s - r e g , s - n e x t ;
r e g [2:0] n - r e g , n-next ;
reg [7:0] b-reg , b-next ;
2s
// bod,v
// FSMD s t a t e & d a t a r e g i s t e r s
always Q( posedge clk , posedge r e s e t )
i f ( r e s e t )
30 begin
s t a t e - r e g <= i d l e ;
s - r e g <= 0 ;
n - r e g <= 0 ;
b - r e g <= 0 ;
end
e l s e
begin
s t a t e - r e g <= s t a t e - n e x t ;
s - r e g <= s - n e x t ;
n - r e g <= n-next;
b - r e g <= b-next;
end
// FSMD n e x t - s t a t e l o g i c
15 always Q*
begin
s t a t e - n e x t = s t a t e - r e g ;
r x - d o n e - t i c k = l'bO;
s - n e x t = s - r e g ;
50 n-next = n-reg;
b-next = b - r e g ;
c a s e ( s t a t e - r e g )
i d l e :
i f (-rx)
begin
s t a t e - n e x t = s t a r t ;
s - n e x t = 0 ;
end
s t a r t :
i f (s-tick)
i f (s_reg==7)
begin
s t a t e - n e x t = d a t a ;
s - n e x t = 0 ;
n-next = 0 ;
end
e l s e
s - n e x t = s - r e g + 1 ;
d a t a :
i f (s-tick)
i f (s_reg==15)
begin
s - n e x t = 0 ;
b-next = (rx , b - r e g [7 : 11 1 ;
i f (n-reg==(DBIT-1))
s t a t e - n e x t = s t o p ;
e l s e
n - n e x t = n-reg + 1 ;
end
e l s e
s - n e x t = s - r e g + 1 ;
s t o p :
i f (s-tick)
i f (s-reg==(SB-TICK-1))
begin
s t a t e - n e x t = i d l e ;
rx-done-tick =l'bl;
end
e l s e
s - n e x t = s - r e g + 1;
endcase
end
// o u t p u t
a s s i g n d o u t = b - r e g ;
